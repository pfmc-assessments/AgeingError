% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RunFn.R
\name{RunFn}
\alias{RunFn}
\title{Run ageing error model}
\usage{
RunFn(
  Data,
  SigOpt,
  KnotAges,
  BiasOpt,
  NDataSets,
  MinAge,
  MaxAge,
  RefAge,
  MinusAge,
  PlusAge,
  MaxSd,
  MaxExpectedAge,
  SaveFile,
  EffSampleSize = 0,
  Intern = TRUE,
  AdmbFile = NULL,
  JustWrite = FALSE,
  CallType = "system",
  ExtraArgs = " -est",
  verbose = TRUE
)
}
\arguments{
\item{Data}{This is the data set as previously formatted. If the data has
multiple rows with identical reads, this will cause an error and the
"XXX.rep" file will have a properly formatted data matrix which can be
cut-pasted into a "XXX.dat" file for use.}

\item{SigOpt}{This a vector with one entry for each reader (i.e. Ncol-1
entries). Each entry specifies the functional form of reading error as
a function of true age. Possible entries include:
\describe{
  \item{-X}{"-1", "-2", "-3", etc; this reader will mirror the
        estimated SD from another reader to it's left. "-1" causes it to
        mirror the estimated SD for the first reader, etc. This number has
        to be lower than the current entry number.}
  \item{0}{No error (but potentially bias)}
  \item{1}{Constant CV, i.e., a 1 parameter linear relationship of SD with
        true age.}
  \item{2}{Curvilinear SD, i.e., a 3 parameter Hollings-form relationship
        of SD with true age}
  \item{3}{Curvilinear CV, i.e., a 3-parameter Hollings-form
        relationship of CV with true age}
  \item{5}{Spline with estimated slope at beginning and end (Number
        of params = 2 + number of knots)}
  \item{6}{Linear interpolation (1st knot must be 1 and last knot must
        be MaxAge)}
}}

\item{KnotAges}{Ages associated with (necessary for options 5 or 6)}

\item{BiasOpt}{A vector with one entry for each reader specifying the type
of bias specific to each reader. Positive values lead to estimated
parameters and negative values are used for shared parameters
between readers. Parameter sharing is common when there is more
than one reader in a lab working together to refine their methods
such that they have matching techniques. The following types of bias
options are available:
\describe{
  \item{-X}{Mirror the parmeters for reader X}
  \item{0}{Unbiased, where at least one reader has to be unbiased}
  \item{1}{Constant CV: a 1-parameter linear relationship of bias
    with true age}
  \item{2}{Curvilinear: a 2-parameter Hollings-form relationship
    of bias with true age}
}
An example entry for the situation where you have seven readers and you assume
that the first reader is unbiased, readers 2-7 have a curvilinear
bias, reader 3 shares parameters with reader 2, reader 5 shares parameters
with reader 4, and reader 7 shares parameters with reader 6 would look like
\code{c(0, 2, -2, 2, -4, 2, -6)}.}

\item{NDataSets}{This is generally "1" and other values are not implemented
in the current R-code.}

\item{MinAge}{The minimum possible "true" age}

\item{MaxAge}{The maximum possible "true" age}

\item{RefAge}{An arbitrarily chosen age from which "true" age-composition
fixed-effects are calculated as an offset. This has no effect on the answer,
but could potentially effect estimation speed.}

\item{MinusAge}{The minimum age for which an age-specific age-composition is
estimated. Ages below this MinusAge have "true" proportion-at-age (P_a)
estimated as P_a = P_MinusAge*exp(beta*(MinusAge - a)), where beta is an
estimated log-linear trend in the "true" proportion-at-age.
If MinusAge = MinAge, beta is not estimated.}

\item{PlusAge}{Identical to MinusAge except defining the age above with
age-specific age-composition is not estimated.}

\item{MaxSd}{An upper bound on possible values for the standard deviation
of reading error}

\item{MaxExpectedAge}{Set to MaxAge}

\item{SaveFile}{Directory where "agemat.exe" is located and where all ADMB
intermediate and output files should be located. If AdmbFile is specified
then "agemat.exe" is copied from that directory to SaveFile}

\item{EffSampleSize}{Indicating whether effective sample size should be
calculated. Missing values in the data matrix will cause this to be
ineffective, in which case this should be set to "0"}

\item{Intern}{"TRUE" indicates that ADMB output should be displayed in R;
"FALSE" does not.}

\item{AdmbFile}{Optional directory from which "agemat.exe" is to be copied
to SaveFile}

\item{JustWrite}{Switch to allow data files to be written without running
ADMB executable.}

\item{CallType}{Either "system" or "shell" depending on Operating System
or how R is being run.}

\item{ExtraArgs}{Extra arguments passed to ADMB. Default is " -est".}

\item{verbose}{Provide more feedback about function progress?}
}
\description{
Run the Punt et al. (2008) ADMB-based ageing error model from within R
}
\examples{
example(SimulatorFn)
\dontrun{
utils::write.csv(AgeReads,
  file = file.path(getwd(), "Simulated_data_example.csv"))
}

##### Format data
Nreaders <- ncol(AgeReads)
# Change NA to -999 (which the Punt software considers missing data)
AgeReads <- ifelse(is.na(AgeReads), -999, AgeReads)

# Potentially eliminate rows that are only read once
# These rows have no information about reading error, but are potentially
# informative about latent age-structure. It is unknown whether eliminating
# these rows degrades estimation of error and bias, and is currently
# recommended to speed up computation
if (FALSE) {
  KeepRow <- ifelse(
    rowSums(ifelse(AgeReads == -999, 0, 1), na.rm = TRUE) <= 1,
    FALSE, TRUE
  )
  AgeReads <- AgeReads[KeepRow, ]
}

# AgeReads2 is the correctly formatted data object
AgeReads2 <- rMx(c(1, AgeReads[1, ]))

# Combine duplicate rows
for (RowI in 2:nrow(AgeReads)) {
  DupRow <- NA
  for (PreviousRowJ in 1:nrow(AgeReads2)) {
    if (all(
      AgeReads[RowI,1:Nreaders] == AgeReads2[PreviousRowJ,1:Nreaders+1]
    )) {
      DupRow <- PreviousRowJ
    }
  }
  if (is.na(DupRow)) {# Add new row to AgeReads2
    AgeReads2 <- rbind(AgeReads2, c(1, AgeReads[RowI, ]))
  }
  if(!is.na(DupRow)){# Increment number of samples for previous duplicate
    AgeReads2[DupRow,1] <- AgeReads2[DupRow,1] + 1
  }
}

######## Determine settings for ADMB
# Define minimum and maximum ages for integral across unobserved ages
MinAge <- 1
MaxAge <- ceiling(max(AgeReads2[,-1])/10)*10
BiasOpt <- c(0, -1, 0, -3)
SigOpt <- c(1, -1, 6, -3)
# Necessary for SigOpt option 5 or 6
KnotAges <- list(NA, NA, c(1, 10, 20, MaxAge), NA)

##### Run the model (MAY TAKE 5-10 MINUTES)
\dontrun{
fileloc <- file.path(tempdir(), "age")
dir.create(fileloc, showWarnings = FALSE)
RunFn(Data = AgeReads2, SigOpt = SigOpt, KnotAges = KnotAges,
  BiasOpt = BiasOpt,
  NDataSets = 1, MinAge = MinAge, MaxAge = MaxAge, RefAge = 10,
  MinusAge = 1, PlusAge = 30, SaveFile = fileloc,
  AdmbFile = file.path(system.file("executables",
    package = "nwfscAgeingError"), .Platform$file.sep),
  EffSampleSize = 0, Intern = FALSE, JustWrite = FALSE, CallType = "shell"
)
}
}
\seealso{
\code{\link{StepwiseFn}}, \code{\link{PlotOutputFn}}
}
\author{
James T. Thorson, Ian J. Stewart, Andre E. Punt, Ian G. Taylor
}
